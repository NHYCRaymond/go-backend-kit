// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: crawler.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NodeStatus 节点状态
type NodeStatus int32

const (
	NodeStatus_NODE_STATUS_UNKNOWN  NodeStatus = 0
	NodeStatus_NODE_STATUS_STARTING NodeStatus = 1
	NodeStatus_NODE_STATUS_ACTIVE   NodeStatus = 2
	NodeStatus_NODE_STATUS_PAUSED   NodeStatus = 3
	NodeStatus_NODE_STATUS_STOPPING NodeStatus = 4
	NodeStatus_NODE_STATUS_ERROR    NodeStatus = 5
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "NODE_STATUS_UNKNOWN",
		1: "NODE_STATUS_STARTING",
		2: "NODE_STATUS_ACTIVE",
		3: "NODE_STATUS_PAUSED",
		4: "NODE_STATUS_STOPPING",
		5: "NODE_STATUS_ERROR",
	}
	NodeStatus_value = map[string]int32{
		"NODE_STATUS_UNKNOWN":  0,
		"NODE_STATUS_STARTING": 1,
		"NODE_STATUS_ACTIVE":   2,
		"NODE_STATUS_PAUSED":   3,
		"NODE_STATUS_STOPPING": 4,
		"NODE_STATUS_ERROR":    5,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_proto_enumTypes[0].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_crawler_proto_enumTypes[0]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{0}
}

// TaskStatus 任务状态
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNKNOWN   TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING   TaskStatus = 1
	TaskStatus_TASK_STATUS_RUNNING   TaskStatus = 2
	TaskStatus_TASK_STATUS_SUCCESS   TaskStatus = 3
	TaskStatus_TASK_STATUS_FAILED    TaskStatus = 4
	TaskStatus_TASK_STATUS_RETRYING  TaskStatus = 5
	TaskStatus_TASK_STATUS_CANCELLED TaskStatus = 6
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNKNOWN",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_RUNNING",
		3: "TASK_STATUS_SUCCESS",
		4: "TASK_STATUS_FAILED",
		5: "TASK_STATUS_RETRYING",
		6: "TASK_STATUS_CANCELLED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNKNOWN":   0,
		"TASK_STATUS_PENDING":   1,
		"TASK_STATUS_RUNNING":   2,
		"TASK_STATUS_SUCCESS":   3,
		"TASK_STATUS_FAILED":    4,
		"TASK_STATUS_RETRYING":  5,
		"TASK_STATUS_CANCELLED": 6,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_proto_enumTypes[1].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_crawler_proto_enumTypes[1]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{1}
}

// LogLevel 日志级别
type LogLevel int32

const (
	LogLevel_LOG_LEVEL_DEBUG LogLevel = 0
	LogLevel_LOG_LEVEL_INFO  LogLevel = 1
	LogLevel_LOG_LEVEL_WARN  LogLevel = 2
	LogLevel_LOG_LEVEL_ERROR LogLevel = 3
	LogLevel_LOG_LEVEL_FATAL LogLevel = 4
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "LOG_LEVEL_DEBUG",
		1: "LOG_LEVEL_INFO",
		2: "LOG_LEVEL_WARN",
		3: "LOG_LEVEL_ERROR",
		4: "LOG_LEVEL_FATAL",
	}
	LogLevel_value = map[string]int32{
		"LOG_LEVEL_DEBUG": 0,
		"LOG_LEVEL_INFO":  1,
		"LOG_LEVEL_WARN":  2,
		"LOG_LEVEL_ERROR": 3,
		"LOG_LEVEL_FATAL": 4,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_proto_enumTypes[2].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_crawler_proto_enumTypes[2]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{2}
}

// EventType 事件类型
type EventType int32

const (
	EventType_EVENT_TYPE_UNKNOWN EventType = 0
	// 节点事件
	EventType_EVENT_NODE_ONLINE  EventType = 10
	EventType_EVENT_NODE_OFFLINE EventType = 11
	EventType_EVENT_NODE_ERROR   EventType = 12
	// 任务事件
	EventType_EVENT_TASK_START    EventType = 20
	EventType_EVENT_TASK_COMPLETE EventType = 21
	EventType_EVENT_TASK_FAILED   EventType = 22
	EventType_EVENT_TASK_RETRY    EventType = 23
	// 系统事件
	EventType_EVENT_RATE_LIMIT_EXCEEDED EventType = 30
	EventType_EVENT_MEMORY_HIGH         EventType = 31
	EventType_EVENT_QUEUE_FULL          EventType = 32
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "EVENT_TYPE_UNKNOWN",
		10: "EVENT_NODE_ONLINE",
		11: "EVENT_NODE_OFFLINE",
		12: "EVENT_NODE_ERROR",
		20: "EVENT_TASK_START",
		21: "EVENT_TASK_COMPLETE",
		22: "EVENT_TASK_FAILED",
		23: "EVENT_TASK_RETRY",
		30: "EVENT_RATE_LIMIT_EXCEEDED",
		31: "EVENT_MEMORY_HIGH",
		32: "EVENT_QUEUE_FULL",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNKNOWN":        0,
		"EVENT_NODE_ONLINE":         10,
		"EVENT_NODE_OFFLINE":        11,
		"EVENT_NODE_ERROR":          12,
		"EVENT_TASK_START":          20,
		"EVENT_TASK_COMPLETE":       21,
		"EVENT_TASK_FAILED":         22,
		"EVENT_TASK_RETRY":          23,
		"EVENT_RATE_LIMIT_EXCEEDED": 30,
		"EVENT_MEMORY_HIGH":         31,
		"EVENT_QUEUE_FULL":          32,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_proto_enumTypes[3].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_crawler_proto_enumTypes[3]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{3}
}

// TaskPriority 任务优先级
type TaskPriority int32

const (
	TaskPriority_PRIORITY_LOW    TaskPriority = 0
	TaskPriority_PRIORITY_NORMAL TaskPriority = 1
	TaskPriority_PRIORITY_HIGH   TaskPriority = 2
	TaskPriority_PRIORITY_URGENT TaskPriority = 3
)

// Enum value maps for TaskPriority.
var (
	TaskPriority_name = map[int32]string{
		0: "PRIORITY_LOW",
		1: "PRIORITY_NORMAL",
		2: "PRIORITY_HIGH",
		3: "PRIORITY_URGENT",
	}
	TaskPriority_value = map[string]int32{
		"PRIORITY_LOW":    0,
		"PRIORITY_NORMAL": 1,
		"PRIORITY_HIGH":   2,
		"PRIORITY_URGENT": 3,
	}
)

func (x TaskPriority) Enum() *TaskPriority {
	p := new(TaskPriority)
	*p = x
	return p
}

func (x TaskPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_proto_enumTypes[4].Descriptor()
}

func (TaskPriority) Type() protoreflect.EnumType {
	return &file_crawler_proto_enumTypes[4]
}

func (x TaskPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskPriority.Descriptor instead.
func (TaskPriority) EnumDescriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{4}
}

// SelectorType 选择器类型
type SelectorType int32

const (
	SelectorType_SELECTOR_CSS      SelectorType = 0
	SelectorType_SELECTOR_XPATH    SelectorType = 1
	SelectorType_SELECTOR_JSONPATH SelectorType = 2
	SelectorType_SELECTOR_REGEX    SelectorType = 3
)

// Enum value maps for SelectorType.
var (
	SelectorType_name = map[int32]string{
		0: "SELECTOR_CSS",
		1: "SELECTOR_XPATH",
		2: "SELECTOR_JSONPATH",
		3: "SELECTOR_REGEX",
	}
	SelectorType_value = map[string]int32{
		"SELECTOR_CSS":      0,
		"SELECTOR_XPATH":    1,
		"SELECTOR_JSONPATH": 2,
		"SELECTOR_REGEX":    3,
	}
)

func (x SelectorType) Enum() *SelectorType {
	p := new(SelectorType)
	*p = x
	return p
}

func (x SelectorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SelectorType) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_proto_enumTypes[5].Descriptor()
}

func (SelectorType) Type() protoreflect.EnumType {
	return &file_crawler_proto_enumTypes[5]
}

func (x SelectorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SelectorType.Descriptor instead.
func (SelectorType) EnumDescriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{5}
}

// CommandType 命令类型
type CommandType int32

const (
	CommandType_CMD_UNKNOWN       CommandType = 0
	CommandType_CMD_PAUSE         CommandType = 1
	CommandType_CMD_RESUME        CommandType = 2
	CommandType_CMD_STOP          CommandType = 3
	CommandType_CMD_RESTART       CommandType = 4
	CommandType_CMD_CLEAR_QUEUE   CommandType = 5
	CommandType_CMD_RELOAD_CONFIG CommandType = 6
	CommandType_CMD_FLUSH_CACHE   CommandType = 7
	CommandType_CMD_ROTATE_PROXY  CommandType = 8
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "CMD_UNKNOWN",
		1: "CMD_PAUSE",
		2: "CMD_RESUME",
		3: "CMD_STOP",
		4: "CMD_RESTART",
		5: "CMD_CLEAR_QUEUE",
		6: "CMD_RELOAD_CONFIG",
		7: "CMD_FLUSH_CACHE",
		8: "CMD_ROTATE_PROXY",
	}
	CommandType_value = map[string]int32{
		"CMD_UNKNOWN":       0,
		"CMD_PAUSE":         1,
		"CMD_RESUME":        2,
		"CMD_STOP":          3,
		"CMD_RESTART":       4,
		"CMD_CLEAR_QUEUE":   5,
		"CMD_RELOAD_CONFIG": 6,
		"CMD_FLUSH_CACHE":   7,
		"CMD_ROTATE_PROXY":  8,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_proto_enumTypes[6].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_crawler_proto_enumTypes[6]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{6}
}

// RequestType 请求类型
type RequestType int32

const (
	RequestType_REQUEST_GET_STATUS     RequestType = 0
	RequestType_REQUEST_GET_QUEUE_SIZE RequestType = 1
	RequestType_REQUEST_GET_TASK_INFO  RequestType = 2
	RequestType_REQUEST_LIST_WORKERS   RequestType = 3
)

// Enum value maps for RequestType.
var (
	RequestType_name = map[int32]string{
		0: "REQUEST_GET_STATUS",
		1: "REQUEST_GET_QUEUE_SIZE",
		2: "REQUEST_GET_TASK_INFO",
		3: "REQUEST_LIST_WORKERS",
	}
	RequestType_value = map[string]int32{
		"REQUEST_GET_STATUS":     0,
		"REQUEST_GET_QUEUE_SIZE": 1,
		"REQUEST_GET_TASK_INFO":  2,
		"REQUEST_LIST_WORKERS":   3,
	}
)

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}

func (x RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_proto_enumTypes[7].Descriptor()
}

func (RequestType) Type() protoreflect.EnumType {
	return &file_crawler_proto_enumTypes[7]
}

func (x RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestType.Descriptor instead.
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{7}
}

// NodeMessage 节点发送的消息
type NodeMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Message:
	//
	//	*NodeMessage_Heartbeat
	//	*NodeMessage_MetricsUpdate
	//	*NodeMessage_TaskStatus
	//	*NodeMessage_LogEntry
	//	*NodeMessage_Event
	//	*NodeMessage_Register
	//	*NodeMessage_Response
	Message       isNodeMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeMessage) Reset() {
	*x = NodeMessage{}
	mi := &file_crawler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMessage) ProtoMessage() {}

func (x *NodeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMessage.ProtoReflect.Descriptor instead.
func (*NodeMessage) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{0}
}

func (x *NodeMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *NodeMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NodeMessage) GetMessage() isNodeMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *NodeMessage) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Message.(*NodeMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *NodeMessage) GetMetricsUpdate() *MetricsUpdate {
	if x != nil {
		if x, ok := x.Message.(*NodeMessage_MetricsUpdate); ok {
			return x.MetricsUpdate
		}
	}
	return nil
}

func (x *NodeMessage) GetTaskStatus() *TaskStatusUpdate {
	if x != nil {
		if x, ok := x.Message.(*NodeMessage_TaskStatus); ok {
			return x.TaskStatus
		}
	}
	return nil
}

func (x *NodeMessage) GetLogEntry() *LogEntry {
	if x != nil {
		if x, ok := x.Message.(*NodeMessage_LogEntry); ok {
			return x.LogEntry
		}
	}
	return nil
}

func (x *NodeMessage) GetEvent() *Event {
	if x != nil {
		if x, ok := x.Message.(*NodeMessage_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *NodeMessage) GetRegister() *RegisterNode {
	if x != nil {
		if x, ok := x.Message.(*NodeMessage_Register); ok {
			return x.Register
		}
	}
	return nil
}

func (x *NodeMessage) GetResponse() *Response {
	if x != nil {
		if x, ok := x.Message.(*NodeMessage_Response); ok {
			return x.Response
		}
	}
	return nil
}

type isNodeMessage_Message interface {
	isNodeMessage_Message()
}

type NodeMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,10,opt,name=heartbeat,proto3,oneof"`
}

type NodeMessage_MetricsUpdate struct {
	MetricsUpdate *MetricsUpdate `protobuf:"bytes,11,opt,name=metrics_update,json=metricsUpdate,proto3,oneof"`
}

type NodeMessage_TaskStatus struct {
	TaskStatus *TaskStatusUpdate `protobuf:"bytes,12,opt,name=task_status,json=taskStatus,proto3,oneof"`
}

type NodeMessage_LogEntry struct {
	LogEntry *LogEntry `protobuf:"bytes,13,opt,name=log_entry,json=logEntry,proto3,oneof"`
}

type NodeMessage_Event struct {
	Event *Event `protobuf:"bytes,14,opt,name=event,proto3,oneof"`
}

type NodeMessage_Register struct {
	Register *RegisterNode `protobuf:"bytes,15,opt,name=register,proto3,oneof"`
}

type NodeMessage_Response struct {
	Response *Response `protobuf:"bytes,16,opt,name=response,proto3,oneof"`
}

func (*NodeMessage_Heartbeat) isNodeMessage_Message() {}

func (*NodeMessage_MetricsUpdate) isNodeMessage_Message() {}

func (*NodeMessage_TaskStatus) isNodeMessage_Message() {}

func (*NodeMessage_LogEntry) isNodeMessage_Message() {}

func (*NodeMessage_Event) isNodeMessage_Message() {}

func (*NodeMessage_Register) isNodeMessage_Message() {}

func (*NodeMessage_Response) isNodeMessage_Message() {}

// Heartbeat 心跳消息
type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status        NodeStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=crawler.NodeStatus" json:"status,omitempty"`
	ActiveWorkers int32                  `protobuf:"varint,3,opt,name=active_workers,json=activeWorkers,proto3" json:"active_workers,omitempty"`
	QueueSize     int32                  `protobuf:"varint,4,opt,name=queue_size,json=queueSize,proto3" json:"queue_size,omitempty"`
	CpuUsage      float64                `protobuf:"fixed64,5,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,6,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_crawler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{1}
}

func (x *Heartbeat) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Heartbeat) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_NODE_STATUS_UNKNOWN
}

func (x *Heartbeat) GetActiveWorkers() int32 {
	if x != nil {
		return x.ActiveWorkers
	}
	return 0
}

func (x *Heartbeat) GetQueueSize() int32 {
	if x != nil {
		return x.QueueSize
	}
	return 0
}

func (x *Heartbeat) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *Heartbeat) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

// MetricsUpdate 指标更新
type MetricsUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeId          string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	RequestsTotal   int64                  `protobuf:"varint,2,opt,name=requests_total,json=requestsTotal,proto3" json:"requests_total,omitempty"`
	RequestsSuccess int64                  `protobuf:"varint,3,opt,name=requests_success,json=requestsSuccess,proto3" json:"requests_success,omitempty"`
	RequestsFailed  int64                  `protobuf:"varint,4,opt,name=requests_failed,json=requestsFailed,proto3" json:"requests_failed,omitempty"`
	BytesDownloaded int64                  `protobuf:"varint,5,opt,name=bytes_downloaded,json=bytesDownloaded,proto3" json:"bytes_downloaded,omitempty"`
	ItemsExtracted  int64                  `protobuf:"varint,6,opt,name=items_extracted,json=itemsExtracted,proto3" json:"items_extracted,omitempty"`
	TasksCompleted  int64                  `protobuf:"varint,7,opt,name=tasks_completed,json=tasksCompleted,proto3" json:"tasks_completed,omitempty"`
	TasksFailed     int64                  `protobuf:"varint,8,opt,name=tasks_failed,json=tasksFailed,proto3" json:"tasks_failed,omitempty"`
	AvgResponseTime float64                `protobuf:"fixed64,9,opt,name=avg_response_time,json=avgResponseTime,proto3" json:"avg_response_time,omitempty"`
	SuccessRate     float64                `protobuf:"fixed64,10,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	CustomMetrics   map[string]float64     `protobuf:"bytes,11,rep,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MetricsUpdate) Reset() {
	*x = MetricsUpdate{}
	mi := &file_crawler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsUpdate) ProtoMessage() {}

func (x *MetricsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsUpdate.ProtoReflect.Descriptor instead.
func (*MetricsUpdate) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{2}
}

func (x *MetricsUpdate) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *MetricsUpdate) GetRequestsTotal() int64 {
	if x != nil {
		return x.RequestsTotal
	}
	return 0
}

func (x *MetricsUpdate) GetRequestsSuccess() int64 {
	if x != nil {
		return x.RequestsSuccess
	}
	return 0
}

func (x *MetricsUpdate) GetRequestsFailed() int64 {
	if x != nil {
		return x.RequestsFailed
	}
	return 0
}

func (x *MetricsUpdate) GetBytesDownloaded() int64 {
	if x != nil {
		return x.BytesDownloaded
	}
	return 0
}

func (x *MetricsUpdate) GetItemsExtracted() int64 {
	if x != nil {
		return x.ItemsExtracted
	}
	return 0
}

func (x *MetricsUpdate) GetTasksCompleted() int64 {
	if x != nil {
		return x.TasksCompleted
	}
	return 0
}

func (x *MetricsUpdate) GetTasksFailed() int64 {
	if x != nil {
		return x.TasksFailed
	}
	return 0
}

func (x *MetricsUpdate) GetAvgResponseTime() float64 {
	if x != nil {
		return x.AvgResponseTime
	}
	return 0
}

func (x *MetricsUpdate) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *MetricsUpdate) GetCustomMetrics() map[string]float64 {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

// TaskStatusUpdate 任务状态更新
type TaskStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=crawler.TaskStatus" json:"status,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	RetryCount    int32                  `protobuf:"varint,5,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	DurationMs    int64                  `protobuf:"varint,7,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatusUpdate) Reset() {
	*x = TaskStatusUpdate{}
	mi := &file_crawler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusUpdate) ProtoMessage() {}

func (x *TaskStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusUpdate.ProtoReflect.Descriptor instead.
func (*TaskStatusUpdate) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{3}
}

func (x *TaskStatusUpdate) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStatusUpdate) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TaskStatusUpdate) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNKNOWN
}

func (x *TaskStatusUpdate) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TaskStatusUpdate) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *TaskStatusUpdate) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskStatusUpdate) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *TaskStatusUpdate) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// LogEntry 日志条目
type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Level         LogLevel               `protobuf:"varint,2,opt,name=level,proto3,enum=crawler.LogLevel" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fields        map[string]string      `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Source        string                 `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_crawler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{4}
}

func (x *LogEntry) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *LogEntry) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_LOG_LEVEL_DEBUG
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogEntry) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *LogEntry) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// Event 通用事件
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Type          EventType              `protobuf:"varint,2,opt,name=type,proto3,enum=crawler.EventType" json:"type,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Target        string                 `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Data          *anypb.Any             `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_crawler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{5}
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNKNOWN
}

func (x *Event) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Event) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Event) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// RegisterNode 节点注册
type RegisterNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Capabilities  []string               `protobuf:"bytes,5,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	MaxWorkers    int32                  `protobuf:"varint,6,opt,name=max_workers,json=maxWorkers,proto3" json:"max_workers,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Version       string                 `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNode) Reset() {
	*x = RegisterNode{}
	mi := &file_crawler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNode) ProtoMessage() {}

func (x *RegisterNode) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNode.ProtoReflect.Descriptor instead.
func (*RegisterNode) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RegisterNode) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegisterNode) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RegisterNode) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RegisterNode) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *RegisterNode) GetMaxWorkers() int32 {
	if x != nil {
		return x.MaxWorkers
	}
	return 0
}

func (x *RegisterNode) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RegisterNode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Response 响应消息（用于请求-响应模式）
type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data          *anypb.Any             `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_crawler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{7}
}

func (x *Response) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Response) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Response) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// ControlMessage 控制消息
type ControlMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Message:
	//
	//	*ControlMessage_RateLimit
	//	*ControlMessage_TaskAssignment
	//	*ControlMessage_ConfigUpdate
	//	*ControlMessage_Command
	//	*ControlMessage_Request
	//	*ControlMessage_Ack
	Message       isControlMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	mi := &file_crawler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{8}
}

func (x *ControlMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ControlMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ControlMessage) GetMessage() isControlMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ControlMessage) GetRateLimit() *RateLimitUpdate {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_RateLimit); ok {
			return x.RateLimit
		}
	}
	return nil
}

func (x *ControlMessage) GetTaskAssignment() *TaskAssignment {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_TaskAssignment); ok {
			return x.TaskAssignment
		}
	}
	return nil
}

func (x *ControlMessage) GetConfigUpdate() *ConfigUpdate {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_ConfigUpdate); ok {
			return x.ConfigUpdate
		}
	}
	return nil
}

func (x *ControlMessage) GetCommand() *Command {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_Command); ok {
			return x.Command
		}
	}
	return nil
}

func (x *ControlMessage) GetRequest() *Request {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_Request); ok {
			return x.Request
		}
	}
	return nil
}

func (x *ControlMessage) GetAck() *Acknowledgment {
	if x != nil {
		if x, ok := x.Message.(*ControlMessage_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

type isControlMessage_Message interface {
	isControlMessage_Message()
}

type ControlMessage_RateLimit struct {
	RateLimit *RateLimitUpdate `protobuf:"bytes,10,opt,name=rate_limit,json=rateLimit,proto3,oneof"`
}

type ControlMessage_TaskAssignment struct {
	TaskAssignment *TaskAssignment `protobuf:"bytes,11,opt,name=task_assignment,json=taskAssignment,proto3,oneof"`
}

type ControlMessage_ConfigUpdate struct {
	ConfigUpdate *ConfigUpdate `protobuf:"bytes,12,opt,name=config_update,json=configUpdate,proto3,oneof"`
}

type ControlMessage_Command struct {
	Command *Command `protobuf:"bytes,13,opt,name=command,proto3,oneof"`
}

type ControlMessage_Request struct {
	Request *Request `protobuf:"bytes,14,opt,name=request,proto3,oneof"`
}

type ControlMessage_Ack struct {
	Ack *Acknowledgment `protobuf:"bytes,15,opt,name=ack,proto3,oneof"`
}

func (*ControlMessage_RateLimit) isControlMessage_Message() {}

func (*ControlMessage_TaskAssignment) isControlMessage_Message() {}

func (*ControlMessage_ConfigUpdate) isControlMessage_Message() {}

func (*ControlMessage_Command) isControlMessage_Message() {}

func (*ControlMessage_Request) isControlMessage_Message() {}

func (*ControlMessage_Ack) isControlMessage_Message() {}

// RateLimitUpdate 速率限制更新
type RateLimitUpdate struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RequestsPerSecond int32                  `protobuf:"varint,1,opt,name=requests_per_second,json=requestsPerSecond,proto3" json:"requests_per_second,omitempty"`
	BurstSize         int32                  `protobuf:"varint,2,opt,name=burst_size,json=burstSize,proto3" json:"burst_size,omitempty"`
	DurationSeconds   int64                  `protobuf:"varint,3,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // 0 表示永久
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RateLimitUpdate) Reset() {
	*x = RateLimitUpdate{}
	mi := &file_crawler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitUpdate) ProtoMessage() {}

func (x *RateLimitUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitUpdate.ProtoReflect.Descriptor instead.
func (*RateLimitUpdate) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{9}
}

func (x *RateLimitUpdate) GetRequestsPerSecond() int32 {
	if x != nil {
		return x.RequestsPerSecond
	}
	return 0
}

func (x *RateLimitUpdate) GetBurstSize() int32 {
	if x != nil {
		return x.BurstSize
	}
	return 0
}

func (x *RateLimitUpdate) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

// TaskAssignment 任务分配
type TaskAssignment struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaskId         string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Url            string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Method         string                 `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Headers        map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body           []byte                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Priority       TaskPriority           `protobuf:"varint,6,opt,name=priority,proto3,enum=crawler.TaskPriority" json:"priority,omitempty"`
	MaxRetries     int32                  `protobuf:"varint,7,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,8,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ExtractRules   []*ExtractRule         `protobuf:"bytes,10,rep,name=extract_rules,json=extractRules,proto3" json:"extract_rules,omitempty"`
	TaskType       string                 `protobuf:"bytes,11,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`                                                         // Task type: api, web, detail, seed, etc.
	Cookies        map[string]string      `protobuf:"bytes,12,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Cookies for the request
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TaskAssignment) Reset() {
	*x = TaskAssignment{}
	mi := &file_crawler_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAssignment) ProtoMessage() {}

func (x *TaskAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAssignment.ProtoReflect.Descriptor instead.
func (*TaskAssignment) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{10}
}

func (x *TaskAssignment) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAssignment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TaskAssignment) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *TaskAssignment) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TaskAssignment) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *TaskAssignment) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_PRIORITY_LOW
}

func (x *TaskAssignment) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *TaskAssignment) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *TaskAssignment) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskAssignment) GetExtractRules() []*ExtractRule {
	if x != nil {
		return x.ExtractRules
	}
	return nil
}

func (x *TaskAssignment) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskAssignment) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

// ExtractRule 提取规则
type ExtractRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Selector      string                 `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,omitempty"`
	Type          SelectorType           `protobuf:"varint,3,opt,name=type,proto3,enum=crawler.SelectorType" json:"type,omitempty"`
	Attribute     string                 `protobuf:"bytes,4,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Multiple      bool                   `protobuf:"varint,5,opt,name=multiple,proto3" json:"multiple,omitempty"`
	DefaultValue  string                 `protobuf:"bytes,6,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractRule) Reset() {
	*x = ExtractRule{}
	mi := &file_crawler_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractRule) ProtoMessage() {}

func (x *ExtractRule) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractRule.ProtoReflect.Descriptor instead.
func (*ExtractRule) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{11}
}

func (x *ExtractRule) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ExtractRule) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

func (x *ExtractRule) GetType() SelectorType {
	if x != nil {
		return x.Type
	}
	return SelectorType_SELECTOR_CSS
}

func (x *ExtractRule) GetAttribute() string {
	if x != nil {
		return x.Attribute
	}
	return ""
}

func (x *ExtractRule) GetMultiple() bool {
	if x != nil {
		return x.Multiple
	}
	return false
}

func (x *ExtractRule) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

// ConfigUpdate 配置更新
type ConfigUpdate struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Config             map[string]string      `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RestartRequired    bool                   `protobuf:"varint,2,opt,name=restart_required,json=restartRequired,proto3" json:"restart_required,omitempty"`
	AffectedComponents []string               `protobuf:"bytes,3,rep,name=affected_components,json=affectedComponents,proto3" json:"affected_components,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConfigUpdate) Reset() {
	*x = ConfigUpdate{}
	mi := &file_crawler_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdate) ProtoMessage() {}

func (x *ConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdate.ProtoReflect.Descriptor instead.
func (*ConfigUpdate) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigUpdate) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigUpdate) GetRestartRequired() bool {
	if x != nil {
		return x.RestartRequired
	}
	return false
}

func (x *ConfigUpdate) GetAffectedComponents() []string {
	if x != nil {
		return x.AffectedComponents
	}
	return nil
}

// Command 命令
type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          CommandType            `protobuf:"varint,1,opt,name=type,proto3,enum=crawler.CommandType" json:"type,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_crawler_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{13}
}

func (x *Command) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_CMD_UNKNOWN
}

func (x *Command) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Request 请求消息（用于请求-响应模式）
type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Type          RequestType            `protobuf:"varint,2,opt,name=type,proto3,enum=crawler.RequestType" json:"type,omitempty"`
	Data          *anypb.Any             `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_crawler_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{14}
}

func (x *Request) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *Request) GetType() RequestType {
	if x != nil {
		return x.Type
	}
	return RequestType_REQUEST_GET_STATUS
}

func (x *Request) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// Acknowledgment 确认消息
type Acknowledgment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Acknowledgment) Reset() {
	*x = Acknowledgment{}
	mi := &file_crawler_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acknowledgment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acknowledgment) ProtoMessage() {}

func (x *Acknowledgment) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acknowledgment.ProtoReflect.Descriptor instead.
func (*Acknowledgment) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{15}
}

func (x *Acknowledgment) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Acknowledgment) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Acknowledgment) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// GetMetricsRequest 获取指标请求
type GetMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MetricNames   []string               `protobuf:"bytes,2,rep,name=metric_names,json=metricNames,proto3" json:"metric_names,omitempty"`
	FromTimestamp int64                  `protobuf:"varint,3,opt,name=from_timestamp,json=fromTimestamp,proto3" json:"from_timestamp,omitempty"`
	ToTimestamp   int64                  `protobuf:"varint,4,opt,name=to_timestamp,json=toTimestamp,proto3" json:"to_timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	mi := &file_crawler_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{16}
}

func (x *GetMetricsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetMetricsRequest) GetMetricNames() []string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

func (x *GetMetricsRequest) GetFromTimestamp() int64 {
	if x != nil {
		return x.FromTimestamp
	}
	return 0
}

func (x *GetMetricsRequest) GetToTimestamp() int64 {
	if x != nil {
		return x.ToTimestamp
	}
	return 0
}

// MetricsResponse 指标响应
type MetricsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Metrics       map[string]*MetricValue `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	mi := &file_crawler_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{17}
}

func (x *MetricsResponse) GetMetrics() map[string]*MetricValue {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// MetricValue 指标值
type MetricValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*MetricValue_IntValue
	//	*MetricValue_DoubleValue
	//	*MetricValue_StringValue
	Value         isMetricValue_Value    `protobuf_oneof:"value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricValue) Reset() {
	*x = MetricValue{}
	mi := &file_crawler_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricValue) ProtoMessage() {}

func (x *MetricValue) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricValue.ProtoReflect.Descriptor instead.
func (*MetricValue) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{18}
}

func (x *MetricValue) GetValue() isMetricValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MetricValue) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*MetricValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *MetricValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*MetricValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *MetricValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*MetricValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *MetricValue) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type isMetricValue_Value interface {
	isMetricValue_Value()
}

type MetricValue_IntValue struct {
	IntValue int64 `protobuf:"varint,1,opt,name=int_value,json=intValue,proto3,oneof"`
}

type MetricValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,2,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type MetricValue_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

func (*MetricValue_IntValue) isMetricValue_Value() {}

func (*MetricValue_DoubleValue) isMetricValue_Value() {}

func (*MetricValue_StringValue) isMetricValue_Value() {}

// ConfigUpdateRequest 配置更新请求
type ConfigUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Config        map[string]string      `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ValidateOnly  bool                   `protobuf:"varint,3,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigUpdateRequest) Reset() {
	*x = ConfigUpdateRequest{}
	mi := &file_crawler_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateRequest) ProtoMessage() {}

func (x *ConfigUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateRequest.ProtoReflect.Descriptor instead.
func (*ConfigUpdateRequest) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{19}
}

func (x *ConfigUpdateRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ConfigUpdateRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigUpdateRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

// ConfigUpdateResponse 配置更新响应
type ConfigUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigUpdateResponse) Reset() {
	*x = ConfigUpdateResponse{}
	mi := &file_crawler_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateResponse) ProtoMessage() {}

func (x *ConfigUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateResponse.ProtoReflect.Descriptor instead.
func (*ConfigUpdateResponse) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{20}
}

func (x *ConfigUpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfigUpdateResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ConfigUpdateResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// CommandRequest 命令请求
type CommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Command       *Command               `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	mi := &file_crawler_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{21}
}

func (x *CommandRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CommandRequest) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

// CommandResponse 命令响应
type CommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Result        *anypb.Any             `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	mi := &file_crawler_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{22}
}

func (x *CommandResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CommandResponse) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_crawler_proto protoreflect.FileDescriptor

const file_crawler_proto_rawDesc = "" +
	"\n" +
	"\rcrawler.proto\x12\acrawler\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"\xe4\x03\n" +
	"\vNodeMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x122\n" +
	"\theartbeat\x18\n" +
	" \x01(\v2\x12.crawler.HeartbeatH\x00R\theartbeat\x12?\n" +
	"\x0emetrics_update\x18\v \x01(\v2\x16.crawler.MetricsUpdateH\x00R\rmetricsUpdate\x12<\n" +
	"\vtask_status\x18\f \x01(\v2\x19.crawler.TaskStatusUpdateH\x00R\n" +
	"taskStatus\x120\n" +
	"\tlog_entry\x18\r \x01(\v2\x11.crawler.LogEntryH\x00R\blogEntry\x12&\n" +
	"\x05event\x18\x0e \x01(\v2\x0e.crawler.EventH\x00R\x05event\x123\n" +
	"\bregister\x18\x0f \x01(\v2\x15.crawler.RegisterNodeH\x00R\bregister\x12/\n" +
	"\bresponse\x18\x10 \x01(\v2\x11.crawler.ResponseH\x00R\bresponseB\t\n" +
	"\amessage\"\xd7\x01\n" +
	"\tHeartbeat\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12+\n" +
	"\x06status\x18\x02 \x01(\x0e2\x13.crawler.NodeStatusR\x06status\x12%\n" +
	"\x0eactive_workers\x18\x03 \x01(\x05R\ractiveWorkers\x12\x1d\n" +
	"\n" +
	"queue_size\x18\x04 \x01(\x05R\tqueueSize\x12\x1b\n" +
	"\tcpu_usage\x18\x05 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x06 \x01(\x01R\vmemoryUsage\"\xa6\x04\n" +
	"\rMetricsUpdate\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12%\n" +
	"\x0erequests_total\x18\x02 \x01(\x03R\rrequestsTotal\x12)\n" +
	"\x10requests_success\x18\x03 \x01(\x03R\x0frequestsSuccess\x12'\n" +
	"\x0frequests_failed\x18\x04 \x01(\x03R\x0erequestsFailed\x12)\n" +
	"\x10bytes_downloaded\x18\x05 \x01(\x03R\x0fbytesDownloaded\x12'\n" +
	"\x0fitems_extracted\x18\x06 \x01(\x03R\x0eitemsExtracted\x12'\n" +
	"\x0ftasks_completed\x18\a \x01(\x03R\x0etasksCompleted\x12!\n" +
	"\ftasks_failed\x18\b \x01(\x03R\vtasksFailed\x12*\n" +
	"\x11avg_response_time\x18\t \x01(\x01R\x0favgResponseTime\x12!\n" +
	"\fsuccess_rate\x18\n" +
	" \x01(\x01R\vsuccessRate\x12P\n" +
	"\x0ecustom_metrics\x18\v \x03(\v2).crawler.MetricsUpdate.CustomMetricsEntryR\rcustomMetrics\x1a@\n" +
	"\x12CustomMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xec\x02\n" +
	"\x10TaskStatusUpdate\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12+\n" +
	"\x06status\x18\x03 \x01(\x0e2\x13.crawler.TaskStatusR\x06status\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x1f\n" +
	"\vretry_count\x18\x05 \x01(\x05R\n" +
	"retryCount\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vduration_ms\x18\a \x01(\x03R\n" +
	"durationMs\x12C\n" +
	"\bmetadata\x18\b \x03(\v2'.crawler.TaskStatusUpdate.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaa\x02\n" +
	"\bLogEntry\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12'\n" +
	"\x05level\x18\x02 \x01(\x0e2\x11.crawler.LogLevelR\x05level\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x125\n" +
	"\x06fields\x18\x05 \x03(\v2\x1d.crawler.LogEntry.FieldsEntryR\x06fields\x12\x16\n" +
	"\x06source\x18\x06 \x01(\tR\x06source\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xde\x01\n" +
	"\x05Event\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12&\n" +
	"\x04type\x18\x02 \x01(\x0e2\x12.crawler.EventTypeR\x04type\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x16\n" +
	"\x06target\x18\x04 \x01(\tR\x06target\x12(\n" +
	"\x04data\x18\x05 \x01(\v2\x14.google.protobuf.AnyR\x04data\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xbc\x02\n" +
	"\fRegisterNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12\"\n" +
	"\fcapabilities\x18\x05 \x03(\tR\fcapabilities\x12\x1f\n" +
	"\vmax_workers\x18\x06 \x01(\x05R\n" +
	"maxWorkers\x129\n" +
	"\x06labels\x18\a \x03(\v2!.crawler.RegisterNode.LabelsEntryR\x06labels\x12\x18\n" +
	"\aversion\x18\b \x01(\tR\aversion\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x01\n" +
	"\bResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12(\n" +
	"\x04data\x18\x04 \x01(\v2\x14.google.protobuf.AnyR\x04data\"\xba\x03\n" +
	"\x0eControlMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x129\n" +
	"\n" +
	"rate_limit\x18\n" +
	" \x01(\v2\x18.crawler.RateLimitUpdateH\x00R\trateLimit\x12B\n" +
	"\x0ftask_assignment\x18\v \x01(\v2\x17.crawler.TaskAssignmentH\x00R\x0etaskAssignment\x12<\n" +
	"\rconfig_update\x18\f \x01(\v2\x15.crawler.ConfigUpdateH\x00R\fconfigUpdate\x12,\n" +
	"\acommand\x18\r \x01(\v2\x10.crawler.CommandH\x00R\acommand\x12,\n" +
	"\arequest\x18\x0e \x01(\v2\x10.crawler.RequestH\x00R\arequest\x12+\n" +
	"\x03ack\x18\x0f \x01(\v2\x17.crawler.AcknowledgmentH\x00R\x03ackB\t\n" +
	"\amessage\"\x8b\x01\n" +
	"\x0fRateLimitUpdate\x12.\n" +
	"\x13requests_per_second\x18\x01 \x01(\x05R\x11requestsPerSecond\x12\x1d\n" +
	"\n" +
	"burst_size\x18\x02 \x01(\x05R\tburstSize\x12)\n" +
	"\x10duration_seconds\x18\x03 \x01(\x03R\x0fdurationSeconds\"\xb4\x05\n" +
	"\x0eTaskAssignment\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x03 \x01(\tR\x06method\x12>\n" +
	"\aheaders\x18\x04 \x03(\v2$.crawler.TaskAssignment.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x121\n" +
	"\bpriority\x18\x06 \x01(\x0e2\x15.crawler.TaskPriorityR\bpriority\x12\x1f\n" +
	"\vmax_retries\x18\a \x01(\x05R\n" +
	"maxRetries\x12'\n" +
	"\x0ftimeout_seconds\x18\b \x01(\x05R\x0etimeoutSeconds\x12A\n" +
	"\bmetadata\x18\t \x03(\v2%.crawler.TaskAssignment.MetadataEntryR\bmetadata\x129\n" +
	"\rextract_rules\x18\n" +
	" \x03(\v2\x14.crawler.ExtractRuleR\fextractRules\x12\x1b\n" +
	"\ttask_type\x18\v \x01(\tR\btaskType\x12>\n" +
	"\acookies\x18\f \x03(\v2$.crawler.TaskAssignment.CookiesEntryR\acookies\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fCookiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc9\x01\n" +
	"\vExtractRule\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1a\n" +
	"\bselector\x18\x02 \x01(\tR\bselector\x12)\n" +
	"\x04type\x18\x03 \x01(\x0e2\x15.crawler.SelectorTypeR\x04type\x12\x1c\n" +
	"\tattribute\x18\x04 \x01(\tR\tattribute\x12\x1a\n" +
	"\bmultiple\x18\x05 \x01(\bR\bmultiple\x12#\n" +
	"\rdefault_value\x18\x06 \x01(\tR\fdefaultValue\"\xe0\x01\n" +
	"\fConfigUpdate\x129\n" +
	"\x06config\x18\x01 \x03(\v2!.crawler.ConfigUpdate.ConfigEntryR\x06config\x12)\n" +
	"\x10restart_required\x18\x02 \x01(\bR\x0frestartRequired\x12/\n" +
	"\x13affected_components\x18\x03 \x03(\tR\x12affectedComponents\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb4\x01\n" +
	"\aCommand\x12(\n" +
	"\x04type\x18\x01 \x01(\x0e2\x14.crawler.CommandTypeR\x04type\x12@\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2 .crawler.Command.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"|\n" +
	"\aRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12(\n" +
	"\x04type\x18\x02 \x01(\x0e2\x14.crawler.RequestTypeR\x04type\x12(\n" +
	"\x04data\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x04data\"n\n" +
	"\x0eAcknowledgment\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\x99\x01\n" +
	"\x11GetMetricsRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12!\n" +
	"\fmetric_names\x18\x02 \x03(\tR\vmetricNames\x12%\n" +
	"\x0efrom_timestamp\x18\x03 \x01(\x03R\rfromTimestamp\x12!\n" +
	"\fto_timestamp\x18\x04 \x01(\x03R\vtoTimestamp\"\xa4\x01\n" +
	"\x0fMetricsResponse\x12?\n" +
	"\ametrics\x18\x01 \x03(\v2%.crawler.MetricsResponse.MetricsEntryR\ametrics\x1aP\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.crawler.MetricValueR\x05value:\x028\x01\"\xb9\x01\n" +
	"\vMetricValue\x12\x1d\n" +
	"\tint_value\x18\x01 \x01(\x03H\x00R\bintValue\x12#\n" +
	"\fdouble_value\x18\x02 \x01(\x01H\x00R\vdoubleValue\x12#\n" +
	"\fstring_value\x18\x03 \x01(\tH\x00R\vstringValue\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestampB\a\n" +
	"\x05value\"\xd0\x01\n" +
	"\x13ConfigUpdateRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12@\n" +
	"\x06config\x18\x02 \x03(\v2(.crawler.ConfigUpdateRequest.ConfigEntryR\x06config\x12#\n" +
	"\rvalidate_only\x18\x03 \x01(\bR\fvalidateOnly\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"q\n" +
	"\x14ConfigUpdateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\"U\n" +
	"\x0eCommandRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12*\n" +
	"\acommand\x18\x02 \x01(\v2\x10.crawler.CommandR\acommand\"~\n" +
	"\x0fCommandResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12,\n" +
	"\x06result\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x06result*\xa0\x01\n" +
	"\n" +
	"NodeStatus\x12\x17\n" +
	"\x13NODE_STATUS_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14NODE_STATUS_STARTING\x10\x01\x12\x16\n" +
	"\x12NODE_STATUS_ACTIVE\x10\x02\x12\x16\n" +
	"\x12NODE_STATUS_PAUSED\x10\x03\x12\x18\n" +
	"\x14NODE_STATUS_STOPPING\x10\x04\x12\x15\n" +
	"\x11NODE_STATUS_ERROR\x10\x05*\xbd\x01\n" +
	"\n" +
	"TaskStatus\x12\x17\n" +
	"\x13TASK_STATUS_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x17\n" +
	"\x13TASK_STATUS_RUNNING\x10\x02\x12\x17\n" +
	"\x13TASK_STATUS_SUCCESS\x10\x03\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x04\x12\x18\n" +
	"\x14TASK_STATUS_RETRYING\x10\x05\x12\x19\n" +
	"\x15TASK_STATUS_CANCELLED\x10\x06*q\n" +
	"\bLogLevel\x12\x13\n" +
	"\x0fLOG_LEVEL_DEBUG\x10\x00\x12\x12\n" +
	"\x0eLOG_LEVEL_INFO\x10\x01\x12\x12\n" +
	"\x0eLOG_LEVEL_WARN\x10\x02\x12\x13\n" +
	"\x0fLOG_LEVEL_ERROR\x10\x03\x12\x13\n" +
	"\x0fLOG_LEVEL_FATAL\x10\x04*\x90\x02\n" +
	"\tEventType\x12\x16\n" +
	"\x12EVENT_TYPE_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11EVENT_NODE_ONLINE\x10\n" +
	"\x12\x16\n" +
	"\x12EVENT_NODE_OFFLINE\x10\v\x12\x14\n" +
	"\x10EVENT_NODE_ERROR\x10\f\x12\x14\n" +
	"\x10EVENT_TASK_START\x10\x14\x12\x17\n" +
	"\x13EVENT_TASK_COMPLETE\x10\x15\x12\x15\n" +
	"\x11EVENT_TASK_FAILED\x10\x16\x12\x14\n" +
	"\x10EVENT_TASK_RETRY\x10\x17\x12\x1d\n" +
	"\x19EVENT_RATE_LIMIT_EXCEEDED\x10\x1e\x12\x15\n" +
	"\x11EVENT_MEMORY_HIGH\x10\x1f\x12\x14\n" +
	"\x10EVENT_QUEUE_FULL\x10 *]\n" +
	"\fTaskPriority\x12\x10\n" +
	"\fPRIORITY_LOW\x10\x00\x12\x13\n" +
	"\x0fPRIORITY_NORMAL\x10\x01\x12\x11\n" +
	"\rPRIORITY_HIGH\x10\x02\x12\x13\n" +
	"\x0fPRIORITY_URGENT\x10\x03*_\n" +
	"\fSelectorType\x12\x10\n" +
	"\fSELECTOR_CSS\x10\x00\x12\x12\n" +
	"\x0eSELECTOR_XPATH\x10\x01\x12\x15\n" +
	"\x11SELECTOR_JSONPATH\x10\x02\x12\x12\n" +
	"\x0eSELECTOR_REGEX\x10\x03*\xb3\x01\n" +
	"\vCommandType\x12\x0f\n" +
	"\vCMD_UNKNOWN\x10\x00\x12\r\n" +
	"\tCMD_PAUSE\x10\x01\x12\x0e\n" +
	"\n" +
	"CMD_RESUME\x10\x02\x12\f\n" +
	"\bCMD_STOP\x10\x03\x12\x0f\n" +
	"\vCMD_RESTART\x10\x04\x12\x13\n" +
	"\x0fCMD_CLEAR_QUEUE\x10\x05\x12\x15\n" +
	"\x11CMD_RELOAD_CONFIG\x10\x06\x12\x13\n" +
	"\x0fCMD_FLUSH_CACHE\x10\a\x12\x14\n" +
	"\x10CMD_ROTATE_PROXY\x10\b*v\n" +
	"\vRequestType\x12\x16\n" +
	"\x12REQUEST_GET_STATUS\x10\x00\x12\x1a\n" +
	"\x16REQUEST_GET_QUEUE_SIZE\x10\x01\x12\x19\n" +
	"\x15REQUEST_GET_TASK_INFO\x10\x02\x12\x18\n" +
	"\x14REQUEST_LIST_WORKERS\x10\x032\xa1\x02\n" +
	"\vCrawlerNode\x12<\n" +
	"\aConnect\x12\x14.crawler.NodeMessage\x1a\x17.crawler.ControlMessage(\x010\x01\x12B\n" +
	"\n" +
	"GetMetrics\x12\x1a.crawler.GetMetricsRequest\x1a\x18.crawler.MetricsResponse\x12K\n" +
	"\fUpdateConfig\x12\x1c.crawler.ConfigUpdateRequest\x1a\x1d.crawler.ConfigUpdateResponse\x12C\n" +
	"\x0eExecuteCommand\x12\x17.crawler.CommandRequest\x1a\x18.crawler.CommandResponseB\tZ\a./protob\x06proto3"

var (
	file_crawler_proto_rawDescOnce sync.Once
	file_crawler_proto_rawDescData []byte
)

func file_crawler_proto_rawDescGZIP() []byte {
	file_crawler_proto_rawDescOnce.Do(func() {
		file_crawler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crawler_proto_rawDesc), len(file_crawler_proto_rawDesc)))
	})
	return file_crawler_proto_rawDescData
}

var file_crawler_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_crawler_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_crawler_proto_goTypes = []any{
	(NodeStatus)(0),               // 0: crawler.NodeStatus
	(TaskStatus)(0),               // 1: crawler.TaskStatus
	(LogLevel)(0),                 // 2: crawler.LogLevel
	(EventType)(0),                // 3: crawler.EventType
	(TaskPriority)(0),             // 4: crawler.TaskPriority
	(SelectorType)(0),             // 5: crawler.SelectorType
	(CommandType)(0),              // 6: crawler.CommandType
	(RequestType)(0),              // 7: crawler.RequestType
	(*NodeMessage)(nil),           // 8: crawler.NodeMessage
	(*Heartbeat)(nil),             // 9: crawler.Heartbeat
	(*MetricsUpdate)(nil),         // 10: crawler.MetricsUpdate
	(*TaskStatusUpdate)(nil),      // 11: crawler.TaskStatusUpdate
	(*LogEntry)(nil),              // 12: crawler.LogEntry
	(*Event)(nil),                 // 13: crawler.Event
	(*RegisterNode)(nil),          // 14: crawler.RegisterNode
	(*Response)(nil),              // 15: crawler.Response
	(*ControlMessage)(nil),        // 16: crawler.ControlMessage
	(*RateLimitUpdate)(nil),       // 17: crawler.RateLimitUpdate
	(*TaskAssignment)(nil),        // 18: crawler.TaskAssignment
	(*ExtractRule)(nil),           // 19: crawler.ExtractRule
	(*ConfigUpdate)(nil),          // 20: crawler.ConfigUpdate
	(*Command)(nil),               // 21: crawler.Command
	(*Request)(nil),               // 22: crawler.Request
	(*Acknowledgment)(nil),        // 23: crawler.Acknowledgment
	(*GetMetricsRequest)(nil),     // 24: crawler.GetMetricsRequest
	(*MetricsResponse)(nil),       // 25: crawler.MetricsResponse
	(*MetricValue)(nil),           // 26: crawler.MetricValue
	(*ConfigUpdateRequest)(nil),   // 27: crawler.ConfigUpdateRequest
	(*ConfigUpdateResponse)(nil),  // 28: crawler.ConfigUpdateResponse
	(*CommandRequest)(nil),        // 29: crawler.CommandRequest
	(*CommandResponse)(nil),       // 30: crawler.CommandResponse
	nil,                           // 31: crawler.MetricsUpdate.CustomMetricsEntry
	nil,                           // 32: crawler.TaskStatusUpdate.MetadataEntry
	nil,                           // 33: crawler.LogEntry.FieldsEntry
	nil,                           // 34: crawler.RegisterNode.LabelsEntry
	nil,                           // 35: crawler.TaskAssignment.HeadersEntry
	nil,                           // 36: crawler.TaskAssignment.MetadataEntry
	nil,                           // 37: crawler.TaskAssignment.CookiesEntry
	nil,                           // 38: crawler.ConfigUpdate.ConfigEntry
	nil,                           // 39: crawler.Command.ParametersEntry
	nil,                           // 40: crawler.MetricsResponse.MetricsEntry
	nil,                           // 41: crawler.ConfigUpdateRequest.ConfigEntry
	(*timestamppb.Timestamp)(nil), // 42: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 43: google.protobuf.Any
}
var file_crawler_proto_depIdxs = []int32{
	42, // 0: crawler.NodeMessage.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 1: crawler.NodeMessage.heartbeat:type_name -> crawler.Heartbeat
	10, // 2: crawler.NodeMessage.metrics_update:type_name -> crawler.MetricsUpdate
	11, // 3: crawler.NodeMessage.task_status:type_name -> crawler.TaskStatusUpdate
	12, // 4: crawler.NodeMessage.log_entry:type_name -> crawler.LogEntry
	13, // 5: crawler.NodeMessage.event:type_name -> crawler.Event
	14, // 6: crawler.NodeMessage.register:type_name -> crawler.RegisterNode
	15, // 7: crawler.NodeMessage.response:type_name -> crawler.Response
	0,  // 8: crawler.Heartbeat.status:type_name -> crawler.NodeStatus
	31, // 9: crawler.MetricsUpdate.custom_metrics:type_name -> crawler.MetricsUpdate.CustomMetricsEntry
	1,  // 10: crawler.TaskStatusUpdate.status:type_name -> crawler.TaskStatus
	32, // 11: crawler.TaskStatusUpdate.metadata:type_name -> crawler.TaskStatusUpdate.MetadataEntry
	2,  // 12: crawler.LogEntry.level:type_name -> crawler.LogLevel
	42, // 13: crawler.LogEntry.timestamp:type_name -> google.protobuf.Timestamp
	33, // 14: crawler.LogEntry.fields:type_name -> crawler.LogEntry.FieldsEntry
	3,  // 15: crawler.Event.type:type_name -> crawler.EventType
	43, // 16: crawler.Event.data:type_name -> google.protobuf.Any
	42, // 17: crawler.Event.timestamp:type_name -> google.protobuf.Timestamp
	34, // 18: crawler.RegisterNode.labels:type_name -> crawler.RegisterNode.LabelsEntry
	43, // 19: crawler.Response.data:type_name -> google.protobuf.Any
	42, // 20: crawler.ControlMessage.timestamp:type_name -> google.protobuf.Timestamp
	17, // 21: crawler.ControlMessage.rate_limit:type_name -> crawler.RateLimitUpdate
	18, // 22: crawler.ControlMessage.task_assignment:type_name -> crawler.TaskAssignment
	20, // 23: crawler.ControlMessage.config_update:type_name -> crawler.ConfigUpdate
	21, // 24: crawler.ControlMessage.command:type_name -> crawler.Command
	22, // 25: crawler.ControlMessage.request:type_name -> crawler.Request
	23, // 26: crawler.ControlMessage.ack:type_name -> crawler.Acknowledgment
	35, // 27: crawler.TaskAssignment.headers:type_name -> crawler.TaskAssignment.HeadersEntry
	4,  // 28: crawler.TaskAssignment.priority:type_name -> crawler.TaskPriority
	36, // 29: crawler.TaskAssignment.metadata:type_name -> crawler.TaskAssignment.MetadataEntry
	19, // 30: crawler.TaskAssignment.extract_rules:type_name -> crawler.ExtractRule
	37, // 31: crawler.TaskAssignment.cookies:type_name -> crawler.TaskAssignment.CookiesEntry
	5,  // 32: crawler.ExtractRule.type:type_name -> crawler.SelectorType
	38, // 33: crawler.ConfigUpdate.config:type_name -> crawler.ConfigUpdate.ConfigEntry
	6,  // 34: crawler.Command.type:type_name -> crawler.CommandType
	39, // 35: crawler.Command.parameters:type_name -> crawler.Command.ParametersEntry
	7,  // 36: crawler.Request.type:type_name -> crawler.RequestType
	43, // 37: crawler.Request.data:type_name -> google.protobuf.Any
	40, // 38: crawler.MetricsResponse.metrics:type_name -> crawler.MetricsResponse.MetricsEntry
	42, // 39: crawler.MetricValue.timestamp:type_name -> google.protobuf.Timestamp
	41, // 40: crawler.ConfigUpdateRequest.config:type_name -> crawler.ConfigUpdateRequest.ConfigEntry
	21, // 41: crawler.CommandRequest.command:type_name -> crawler.Command
	43, // 42: crawler.CommandResponse.result:type_name -> google.protobuf.Any
	26, // 43: crawler.MetricsResponse.MetricsEntry.value:type_name -> crawler.MetricValue
	8,  // 44: crawler.CrawlerNode.Connect:input_type -> crawler.NodeMessage
	24, // 45: crawler.CrawlerNode.GetMetrics:input_type -> crawler.GetMetricsRequest
	27, // 46: crawler.CrawlerNode.UpdateConfig:input_type -> crawler.ConfigUpdateRequest
	29, // 47: crawler.CrawlerNode.ExecuteCommand:input_type -> crawler.CommandRequest
	16, // 48: crawler.CrawlerNode.Connect:output_type -> crawler.ControlMessage
	25, // 49: crawler.CrawlerNode.GetMetrics:output_type -> crawler.MetricsResponse
	28, // 50: crawler.CrawlerNode.UpdateConfig:output_type -> crawler.ConfigUpdateResponse
	30, // 51: crawler.CrawlerNode.ExecuteCommand:output_type -> crawler.CommandResponse
	48, // [48:52] is the sub-list for method output_type
	44, // [44:48] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_crawler_proto_init() }
func file_crawler_proto_init() {
	if File_crawler_proto != nil {
		return
	}
	file_crawler_proto_msgTypes[0].OneofWrappers = []any{
		(*NodeMessage_Heartbeat)(nil),
		(*NodeMessage_MetricsUpdate)(nil),
		(*NodeMessage_TaskStatus)(nil),
		(*NodeMessage_LogEntry)(nil),
		(*NodeMessage_Event)(nil),
		(*NodeMessage_Register)(nil),
		(*NodeMessage_Response)(nil),
	}
	file_crawler_proto_msgTypes[8].OneofWrappers = []any{
		(*ControlMessage_RateLimit)(nil),
		(*ControlMessage_TaskAssignment)(nil),
		(*ControlMessage_ConfigUpdate)(nil),
		(*ControlMessage_Command)(nil),
		(*ControlMessage_Request)(nil),
		(*ControlMessage_Ack)(nil),
	}
	file_crawler_proto_msgTypes[18].OneofWrappers = []any{
		(*MetricValue_IntValue)(nil),
		(*MetricValue_DoubleValue)(nil),
		(*MetricValue_StringValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crawler_proto_rawDesc), len(file_crawler_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crawler_proto_goTypes,
		DependencyIndexes: file_crawler_proto_depIdxs,
		EnumInfos:         file_crawler_proto_enumTypes,
		MessageInfos:      file_crawler_proto_msgTypes,
	}.Build()
	File_crawler_proto = out.File
	file_crawler_proto_goTypes = nil
	file_crawler_proto_depIdxs = nil
}
